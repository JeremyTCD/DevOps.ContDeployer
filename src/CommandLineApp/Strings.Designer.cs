//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JeremyTCD.PipelinesCE.CommandLineApp {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("JeremyTCD.PipelinesCE.CommandLineApp.Strings", typeof(Strings).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PipelinesCE, a continuous everything tool..
        /// </summary>
        public static string CommandDescription_Root {
            get {
                return ResourceManager.GetString("CommandDescription_Root", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Runs a pipeline.
        /// </summary>
        public static string CommandDescription_Run {
            get {
                return ResourceManager.GetString("CommandDescription_Run", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ?.
        /// </summary>
        public static string HelpOptionSymbolName {
            get {
                return ResourceManager.GetString("HelpOptionSymbolName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running command line application with arguments: [{0}].
        /// </summary>
        public static string Log_RunningCommandLineApp {
            get {
                return ResourceManager.GetString("Log_RunningCommandLineApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running root command with arguments:\n{0}.
        /// </summary>
        public static string Log_RunningRootCommand {
            get {
                return ResourceManager.GetString("Log_RunningRootCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running run command with arguments:\n{0}.
        /// </summary>
        public static string Log_RunningRunCommand {
            get {
                return ResourceManager.GetString("Log_RunningRunCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run pipeline in dry run mode.
        /// </summary>
        public static string OptionDescription_DryRun {
            get {
                return ResourceManager.GetString("OptionDescription_DryRun", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name of the pipeline to run. By convention, a pipeline&apos;s name is its factories name less &quot;PipelineFactory&quot;. For example, &quot;MainPipelineFactory&quot; produces a pipeline named &quot;Main&quot;. If this option is ommitted and only one pipeline has been defined, PipelinesCE will run the lone pipeline..
        /// </summary>
        public static string OptionDescription_Pipeline {
            get {
                return ResourceManager.GetString("OptionDescription_Pipeline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name or path of the PipelinesCE project file to use. If a name is provided, PipelinesCE locates the file via a recursive search in the current directory. If this option is ommitted, PipelinesCE recursively searches for &quot;PipelinesCE.csproj&quot; in the current directory..
        /// </summary>
        public static string OptionDescription_Project {
            get {
                return ResourceManager.GetString("OptionDescription_Project", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Write verbose output to console.
        /// </summary>
        public static string OptionDescription_Verbose {
            get {
                return ResourceManager.GetString("OptionDescription_Verbose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to dryrun.
        /// </summary>
        public static string OptionLongName_DryRun {
            get {
                return ResourceManager.GetString("OptionLongName_DryRun", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to help.
        /// </summary>
        public static string OptionLongName_Help {
            get {
                return ResourceManager.GetString("OptionLongName_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to pipeline.
        /// </summary>
        public static string OptionLongName_Pipeline {
            get {
                return ResourceManager.GetString("OptionLongName_Pipeline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to project.
        /// </summary>
        public static string OptionLongName_Project {
            get {
                return ResourceManager.GetString("OptionLongName_Project", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to verbose.
        /// </summary>
        public static string OptionLongName_Verbose {
            get {
                return ResourceManager.GetString("OptionLongName_Verbose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to version.
        /// </summary>
        public static string OptionLongName_Version {
            get {
                return ResourceManager.GetString("OptionLongName_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to d.
        /// </summary>
        public static string OptionShortName_DryRun {
            get {
                return ResourceManager.GetString("OptionShortName_DryRun", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to h.
        /// </summary>
        public static string OptionShortName_Help {
            get {
                return ResourceManager.GetString("OptionShortName_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to pl.
        /// </summary>
        public static string OptionShortName_Pipeline {
            get {
                return ResourceManager.GetString("OptionShortName_Pipeline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to pj.
        /// </summary>
        public static string OptionShortName_Project {
            get {
                return ResourceManager.GetString("OptionShortName_Project", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to vb.
        /// </summary>
        public static string OptionShortName_Verbose {
            get {
                return ResourceManager.GetString("OptionShortName_Verbose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to v.
        /// </summary>
        public static string OptionShortName_Version {
            get {
                return ResourceManager.GetString("OptionShortName_Version", resourceCulture);
            }
        }
    }
}
